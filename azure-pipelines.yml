# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Azure Resource Manager connection
  azureServiceConnectionId: 'Ndexus (47cdce65-a2da-482b-8afd-9a26981cc895)' # You'll configure this in Azure DevOps

  # Web app name
  webAppName: 'financial-advisor-app' # Or your chosen web app name

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Python version
  pythonVersion: '3.11'

  # Working directory
  workingDirectory: '$(System.DefaultWorkingDirectory)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        addToPath: true
        architecture: 'x64'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'
      workingDirectory: $(workingDirectory)

    - script: |
        echo "Running tests if there are any"
        # Add test commands here
      displayName: 'Run Tests'
      workingDirectory: $(workingDirectory)

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(workingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: '$(azureServiceConnectionId)'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              startUpCommand: 'gunicorn --bind=0.0.0.0 --timeout 600 backend.app_entry:app'